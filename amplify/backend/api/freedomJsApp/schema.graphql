type Location {
    lat: Float
    lon: Float
}
input LocationInput {
    lat: Float
    lon: Float
}
type DateRange {
    start: AWSDate
    end: AWSDate
}

enum PublicArtType {
    mural
    sculpture
}

# TODO: consider making @searchable
# https://aws-amplify.github.io/docs/js/api#using-graphql-transformers
type PublicArt @model @searchable{
    id: ID!
    location: Location
    name: String
    description: String
    type: PublicArtType

    # TODO: need ids...?
    photos: [String] 

    # Some public art is up for a limited time.
    permanent: Boolean!
    date_range: DateRange
}

type Reported @model {
    id: ID
    art_id: ID!
    reason: String!
    reason_continued: String
}

# TODO: should not be in final Beta
input ChangePublicArtTypeInput {
	name: String!
	type: String!
}

# TODO: make 'reason' an enum
input FlagLocationInput {
	name: String!
	reason: String!
	reason_continued: String
}

type Mutation {
	flagLocation(input: FlagLocationInput!): PublicArt
	changePublicArtType(input: ChangePublicArtTypeInput!): PublicArt
    addPhoto(location_id: String!, url:String!): PublicArt
}

type Query {
	getPublicArtWithinBoundingBox(
		top_right_gps: LocationInput!,
		bottom_left_gps: LocationInput!,
		limit: Int,
        permanent: Boolean,
		type: String
	): [PublicArt]

    whoAmI: String
}